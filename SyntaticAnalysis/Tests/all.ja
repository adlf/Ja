class all {
    /* PUBLIC STATIC Type    ID      IDext              SEMI  */
    public static int f(int a, boolean val, double tt) {};
    public static int v(int a, boolean val, double tt) {};
    public static int g(int a, boolean val, double tt) {};
    public static int gg(String [] temp) {{{{{{{{{{{}}}}}}}}}}};

    public static void main(String[] args) {
        int a, b;
        boolean c;
        a = Integer.parseInt(args[0]);
        b = Integer.parseInt(args[1]);

        if (a == 0) {
            System.out.println(b);
        } else {
            while (b > 0 && 3 > 1 && 4 > 3)
                if (a > b) {
                    a = a - b;
                    a = a + b;
                    a = a * b;
                    a = a / b;
                    a = a + b;
                    a = a || b;
                    a = a && b;
                    a = a > b;
                    a = a < b;
                    a = a <= b;
                    a = a >= b;
                    b = a.length;
                    b = a;
                    b = (a + a) * 2;
                    a = 10000;
                    b = 3_3;
                    c = false;
                    f();
                } else {
                    b = b - a;
                }
            System.out.println(a);
        }

        do {
            System.out.println("Some string");
        } while (2 > 1);
    }

    public static int foo(int a) {
        if (a == 0) {
            return -1;
        } else {
            /* recursive case -> grammar: RETURN NExpr SEMI*/
            return foo(a - 1);
        }
        ;;;;;;;;;;;;;;
        {{{{{{{{{{{;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;}}}}}}}}}}}
    }

    public static boolean testing(double a, boolean b, int c) {
        int a, b, c, d;
        a = 12;
        b = c = d = a;
        if (b) {
            if (c > 10) {
                a = a + 2.3;
            } else {
                a = a - 6.6;
            }
        } else {
            System.out.println("qwerty");
        }
    }
    public static void bar(int a) {

        testing(2.2, false, 3);
        return;
    }
}